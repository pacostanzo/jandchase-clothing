{"version":3,"sources":["components/with-spinner/with-spinner.component.jsx","redux/shop/shop.selectors.js","components/collection-item/collection-item.component.jsx","pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx"],"names":["WithSpinner","WrappedComponent","isLoading","otherProps","selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded","connect","dispatch","addItem","item","name","price","imageUrl","className","style","backgroundImage","onClick","inverted","CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","ownProps","collection","match","params","collectionId","title","items","id","mapStateToProps","createStructuredSelector","compose","CollectionPage"],"mappings":"iMAUeA,IALK,SAAAC,GAAgB,OAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,UAAcC,EAAgB,iBAEpE,OAAOD,EAAY,cAAC,IAAD,IAAa,eAAC,IAAD,WAAe,cAACD,EAAD,eAAsBE,IAArC,U,iCCPpC,oJAEMC,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG5EC,EAAmB,SAAAC,GAAkB,OAC9CR,YACI,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAI3DC,EAA6BT,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKY,cAGJC,EAA2BX,YACpC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,iCC5BnB,iDAkCeW,gBACX,MALuB,SAAAC,GAAQ,MAAK,CACpCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGvBH,EA1BQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACpBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAErB,OACI,sBAAKC,UAAU,kBAAf,UACI,qBACIA,UAAU,QACVC,MAAO,CACHC,gBAAgB,OAAD,OAASH,EAAT,QAGvB,sBAAKC,UAAU,oBAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwBH,IACxB,sBAAMG,UAAU,QAAhB,SAAyBF,OAE7B,cAAC,IAAD,CAAcE,UAAU,gBAAgBG,QAAS,kBAAMR,EAAQC,IAAOQ,UAAQ,EAA9E,gC,kJCrBCC,EAA0BC,IAAOC,IAAV,sJASvBC,EAAkBF,IAAOG,GAAV,wEAKfC,EAA2BJ,IAAOC,IAAV,yQ,eCkBtBd,eAJS,SAACf,EAAOiC,GAAR,MAAsB,CAC1CC,WAAYxB,YAAiBuB,EAASE,MAAMC,OAAOC,aAAvC3B,CAAqDV,MAGtDe,EApBQ,SAAC,GAAkB,IAAjBmB,EAAgB,EAAhBA,WACdI,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,MACd,OACI,cAAC,IAAD,UACI,eAACZ,EAAD,WACI,cAACG,EAAD,UAAkBQ,IAClB,cAACN,EAAD,UACKO,EAAM/B,KAAI,SAAAU,GAAI,OACX,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKsB,iBCd5CC,EAAkBC,YAAyB,CAC7C7C,UAAW,SAAAG,GAAK,OAAKc,YAAyBd,MAG5C2B,EAA0BgB,YAC5B5B,YAAQ0B,GACR9C,IAF4BgD,CAG9BC,GAEajB","file":"static/js/5.bbb746cf.chunk.js","sourcesContent":["import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\nimport ErrorBoundary from \"../error-boundary/error-boundary.component\";\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n\n    return isLoading ? <Spinner/> : <ErrorBoundary><WrappedComponent {...otherProps} /> </ErrorBoundary>;\n};\n\nexport default WithSpinner;","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => (collections ? collections[collectionUrlParam] : null)\n    );\n\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n);\n\nexport const selectIsCollectionLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({ item, addItem }) => {\n    const { name, price, imageUrl } = item;\n\n    return (\n        <div className='collection-item'>\n            <div\n                className='image'\n                style={{\n                    backgroundImage: `url(${imageUrl})`\n                }}\n            />\n            <div className='collection-footer'>\n                <span className='name'>{name}</span>\n                <span className='price'>{price}</span>\n            </div>\n            <CustomButton className='custom-button' onClick={() => addItem(item)} inverted>\n                Add to cart\n            </CustomButton>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(CollectionItem);","import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n  & > div {\n    margin-bottom: 30px;\n  }\n  \n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n  \n`;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport {selectCollection} from '../../redux/shop/shop.selectors';\n\nimport {\n    CollectionPageContainer,\n    CollectionTitle,\n    CollectionItemsContainer\n} from './collection.styles';\nimport ErrorBoundary from \"../../components/error-boundary/error-boundary.component\";\n\nconst CollectionPage = ({collection}) => {\n    const {title, items} = collection;\n    return (\n        <ErrorBoundary>\n            <CollectionPageContainer>\n                <CollectionTitle>{title}</CollectionTitle>\n                <CollectionItemsContainer>\n                    {items.map(item => (\n                        <CollectionItem key={item.id} item={item}/>\n                    ))}\n                </CollectionItemsContainer>\n            </CollectionPageContainer>\n        </ErrorBoundary>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: state => !selectIsCollectionLoaded(state)\n});\n\nconst CollectionPageContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;"],"sourceRoot":""}