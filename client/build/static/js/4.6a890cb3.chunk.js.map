{"version":3,"sources":["components/with-spinner/with-spinner.component.jsx","pages/signin/sign-in-page.styles.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/signin/sign-in-page.component.jsx","pages/signin/sign-in.container.jsx"],"names":["WithSpinner","WrappedComponent","isLoading","otherProps","SignInAndSignUpContainer","styled","div","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInPage","mapStateToProps","createStructuredSelector","state","selectIsUserLoading","SignInPageContainer","compose"],"mappings":"iMAUeA,IALK,SAAAC,GAAgB,OAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,UAAcC,EAAgB,iBAEpE,OAAOD,EAAY,cAAC,IAAD,IAAa,eAAC,IAAD,WAAe,cAACD,EAAD,eAAsBE,IAArC,U,wKCLvBC,E,MAA2BC,EAAOC,IAAV,8O,mDCEtB,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,8DIcvFC,EAfG,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,MAAU7B,EAA1B,wBACd,sBAAK8B,UAAU,QAAf,UACI,mCAAOA,UAAU,aAAaC,SAAUH,GAAkB5B,IACzD6B,EACG,uBACIC,UAAS,UACL9B,EAAWsB,MAAMC,OAAS,SAAW,GADhC,qBADb,SAKKM,IAEL,S,gBCmDGG,cACX,MAPuB,SAAAC,GAAQ,MAAK,CACpCC,kBAAmB,kBAAMD,EAASC,gBAClCC,iBAAkB,SAACC,EAAOC,GAAR,OACdJ,EAASE,YAAiB,CAACC,QAAOC,kBAG3BL,EAvDA,SAAC,GAA2C,IAA1CG,EAAyC,EAAzCA,iBAAkBD,EAAuB,EAAvBA,kBAC/B,IAA0CI,mBAAS,CAACF,MAAO,GAAIC,SAAU,KAAzE,GAAOE,EAAP,KAAwBC,EAAxB,KACOJ,EAAmBG,EAAnBH,MAAOC,EAAYE,EAAZF,SAERI,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sDACjBD,EAAME,iBACNT,EAAiBC,EAAOC,GAFP,2CAAH,sDAKZT,EAAe,SAACc,GAClB,MAAsBA,EAAMG,OAArBvB,EAAP,EAAOA,MAAOwB,EAAd,EAAcA,KACdN,EAAe,2BAAID,GAAL,kBAAuBO,EAAOxB,MAGhD,OACI,sBAAKQ,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,uCACA,sBAAMA,UAAU,WAAhB,kDAEA,uBAAMiB,SAAUN,EAAhB,UACI,cAAC,EAAD,CAAWO,KAAK,QACLF,KAAK,QACLjB,MAAM,QACNP,MAAOc,EACPR,aAAcA,EACdqB,UAAU,IACrB,cAAC,EAAD,CAAWD,KAAK,WACLF,KAAK,WACLjB,MAAM,WACNP,MAAOe,EACPT,aAAcA,EACdqB,UAAU,IACrB,sBAAKnB,UAAU,UAAf,UACI,cAAC,IAAD,CAAckB,KAAK,SAAnB,uBACA,cAAC,IAAD,CACIA,KAAK,SACLE,QAAShB,EACTiB,gBAAc,EAHlB,6CCqCLnB,G,OAAAA,YACX,MALuB,SAAAC,GAAQ,MAAK,CACpCmB,YAAa,SAAAb,GAAe,OAAIN,EAASmB,YAAYb,QAG1CP,EAxEA,SAAC,GAAmB,IAAlBoB,EAAiB,EAAjBA,YACb,IAA8Cd,mBAAS,CACnDe,YAAa,GACbjB,MAAO,GACPC,SAAU,GACViB,gBAAiB,KAJrB,GAAOf,EAAP,KAAwBgB,EAAxB,KAMOF,EAAiDd,EAAjDc,YAAajB,EAAoCG,EAApCH,MAAOC,EAA6BE,EAA7BF,SAAUiB,EAAmBf,EAAnBe,gBAE/Bb,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACjBD,EAAME,iBAEFP,IAAaiB,EAHA,uBAIbE,MAAM,yBAJO,0BAOjBJ,EAAYb,GAPK,2CAAH,sDAUZX,EAAe,SAAAc,GACjB,MAAsBA,EAAMG,OAArBC,EAAP,EAAOA,KAAMxB,EAAb,EAAaA,MAEbiC,EAAmB,2BAAIhB,GAAL,kBAAuBO,EAAOxB,MAGpD,OACI,sBAAKQ,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,qCACA,sBAAMA,UAAU,WAAhB,kDACA,uBAAMA,UAAU,eAAeiB,SAAUN,EAAzC,UACI,cAAC,EAAD,CACIO,KAAK,OACLF,KAAK,cACLxB,MAAO+B,EACPtB,SAAUH,EACVC,MAAM,eACNoB,UAAQ,IAEZ,cAAC,EAAD,CACID,KAAK,QACLF,KAAK,QACLxB,MAAOc,EACPL,SAAUH,EACVC,MAAM,QACNoB,UAAQ,IAEZ,cAAC,EAAD,CACID,KAAK,WACLF,KAAK,WACLxB,MAAOe,EACPN,SAAUH,EACVC,MAAM,WACNoB,UAAQ,IAEZ,cAAC,EAAD,CACID,KAAK,WACLF,KAAK,kBACLxB,MAAOgC,EACPvB,SAAUH,EACVC,MAAM,mBACNoB,UAAQ,IAEZ,cAAC,IAAD,CAAcD,KAAK,SAAnB,+BC1DDS,EAPI,kBACf,eAACxD,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,QCFFyD,EAAkBC,YAAyB,CAC7C5D,UAAW,SAAA6D,GAAK,OAAIC,YAAoBD,MAGtCE,EAAsBC,YACxB/B,YAAQ0B,GACR7D,IAFwBkE,CAG1BN,GAEaK","file":"static/js/4.6a890cb3.chunk.js","sourcesContent":["import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\nimport ErrorBoundary from \"../error-boundary/error-boundary.component\";\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n\n    return isLoading ? <Spinner/> : <ErrorBoundary><WrappedComponent {...otherProps} /> </ErrorBoundary>;\n};\n\nexport default WithSpinner;","import styled from 'styled-components';\n\nexport const SignInAndSignUpContainer = styled.div`\n  width: 850px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n  \n @media screen and (max-width: 800px) {\n    width: 800px;\n    flex-direction: column;\n    margin: unset;\n  }\n`;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\n\nimport './form-input.styles.scss';\n\nconst FormInput = ({handleChange, label, ...otherProps}) => (\n    <div className='group'>\n        <input className='form-input' onChange={handleChange} {...otherProps} />\n        {label ? (\n            <label\n                className={`${\n                    otherProps.value.length ? 'shrink' : ''\n                    } form-input-label`}\n            >\n                {label}\n            </label>\n        ) : null}\n    </div>\n);\n\nexport default FormInput;","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport './sign-in.styles.scss';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {\n    googleSignInStart,\n    emailSignInStart\n} from '../../redux/user/user.actions';\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\n    const {email, password} = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        emailSignInStart(email, password);\n    };\n\n    const handleChange = (event) => {\n        const {value, name} = event.target;\n        setCredentials({...userCredentials, [name]: value})\n    };\n\n    return (\n        <div className='sign-in'>\n            <h2 className='title'>I already have an account</h2>\n            <span className='subtitle'>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput type=\"email\"\n                           name=\"email\"\n                           label='email'\n                           value={email}\n                           handleChange={handleChange}\n                           required={true}/>\n                <FormInput type=\"password\"\n                           name=\"password\"\n                           label='password'\n                           value={password}\n                           handleChange={handleChange}\n                           required={true}/>\n                <div className='buttons'>\n                    <CustomButton type='submit'> Sign in </CustomButton>\n                    <CustomButton\n                        type='button'\n                        onClick={googleSignInStart}\n                        isGoogleSignIn\n                    >\n                        Sign in with Google\n                    </CustomButton>\n                </div>\n            </form>\n        </div>\n    )\n\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) =>\n        dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(SignIn);","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {signUpStart} from '../../redux/user/user.actions';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n    const {displayName, email, password, confirmPassword} = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match\");\n            return;\n        }\n        signUpStart(userCredentials);\n    };\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n\n        setUserCredentials({...userCredentials, [name]: value});\n    };\n\n    return (\n        <div className='sign-up'>\n            <h2 className='title'>I do not have a account</h2>\n            <span className='subtitle'>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(SignUp);","import React from 'react';\n\nimport { SignInAndSignUpContainer } from './sign-in-page.styles';\n\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nconst SignInPage = () => (\n    <SignInAndSignUpContainer>\n        <SignIn />\n        <SignUp />\n    </SignInAndSignUpContainer>\n);\n\nexport default SignInPage;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsUserLoading } from '../../redux/user/user.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport SignInPage from './sign-in-page.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: state => selectIsUserLoading(state)\n});\n\nconst SignInPageContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(SignInPage);\n\nexport default SignInPageContainer;"],"sourceRoot":""}