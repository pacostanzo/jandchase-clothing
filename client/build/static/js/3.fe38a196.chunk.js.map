{"version":3,"sources":["components/with-spinner/with-spinner.component.jsx","redux/shop/shop.selectors.js","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["WithSpinner","WrappedComponent","isLoading","otherProps","selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded","connect","dispatch","addItem","item","name","price","imageUrl","className","style","backgroundImage","onClick","inverted","CollectionPreview","title","items","toUpperCase","filter","idx","id","CollectionsOverviewContainer","styled","div","mapStateToProps","createStructuredSelector","otherCollectionProps","compose","CollectionsOverview"],"mappings":"iMAUeA,IALK,SAAAC,GAAgB,OAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,UAAcC,EAAgB,iBAEpE,OAAOD,EAAY,cAAC,IAAD,IAAa,eAAC,IAAD,WAAe,cAACD,EAAD,eAAsBE,IAArC,U,iCCPpC,oJAEMC,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG5EC,EAAmB,SAAAC,GAAkB,OAC9CR,YACI,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAI3DC,EAA6BT,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKY,cAGJC,EAA2BX,YACpC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,iCC5BnB,iDAkCeW,gBACX,MALuB,SAAAC,GAAQ,MAAK,CACpCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGvBH,EA1BQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACpBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAErB,OACI,sBAAKC,UAAU,kBAAf,UACI,qBACIA,UAAU,QACVC,MAAO,CACHC,gBAAgB,OAAD,OAASH,EAAT,QAGvB,sBAAKC,UAAU,oBAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwBH,IACxB,sBAAMG,UAAU,QAAhB,SAAyBF,OAE7B,cAAC,IAAD,CAAcE,UAAU,gBAAgBG,QAAS,kBAAMR,EAAQC,IAAOQ,UAAQ,EAA9E,gC,iLCHGC,EAfW,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,OACtB,sBAAKP,UAAU,qBAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBM,EAAME,gBAC7B,qBAAKR,UAAU,UAAf,SAEQO,EAAME,QAAO,SAACb,EAAMc,GAAP,OAAeA,EAAM,KAC7BxB,KAAI,SAACU,GAAD,OACD,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKe,a,QCVrCC,E,MAA+BC,EAAOC,IAAV,yE,iBCmBnCC,EAAkBC,YAAyB,CAC7ClC,YAAaC,MAGFU,cAAQsB,EAARtB,EAfa,SAAC,GAAD,IAAEX,EAAF,EAAEA,YAAF,OACxB,cAAC,IAAD,UACI,cAAC8B,EAAD,UACK9B,EAAYI,KAAI,gBAAEyB,EAAF,EAAEA,GAAOM,EAAT,wBACb,cAAC,EAAD,eAAgCA,GAARN,aCNlCI,EAAkBC,YAAyB,CAC7CzC,UAAWe,MAGTsB,EAA+BM,YACjCzB,YAAQsB,GACR1C,IAFiC6C,CAGnCC,GAEaP","file":"static/js/3.fe38a196.chunk.js","sourcesContent":["import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\nimport ErrorBoundary from \"../error-boundary/error-boundary.component\";\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n\n    return isLoading ? <Spinner/> : <ErrorBoundary><WrappedComponent {...otherProps} /> </ErrorBoundary>;\n};\n\nexport default WithSpinner;","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => (collections ? collections[collectionUrlParam] : null)\n    );\n\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n);\n\nexport const selectIsCollectionLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({ item, addItem }) => {\n    const { name, price, imageUrl } = item;\n\n    return (\n        <div className='collection-item'>\n            <div\n                className='image'\n                style={{\n                    backgroundImage: `url(${imageUrl})`\n                }}\n            />\n            <div className='collection-footer'>\n                <span className='name'>{name}</span>\n                <span className='price'>{price}</span>\n            </div>\n            <CustomButton className='custom-button' onClick={() => addItem(item)} inverted>\n                Add to cart\n            </CustomButton>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(CollectionItem);","import React from 'react';\n\nimport './collection-preview.styles.scss';\nimport CollectionItem from \"../collection-item/collection-item.component\";\n\nconst CollectionPreview = ({title, items}) => (\n    <div className='collection-preview'>\n        <h1 className='title'>{title.toUpperCase()}</h1>\n        <div className='preview'>\n            {\n                items.filter((item, idx) => idx < 4)\n                    .map((item) => (\n                        <CollectionItem key={item.id} item={item}></CollectionItem>\n                    ))\n            }\n        </div>\n    </div>\n);\n\n\nexport default CollectionPreview;","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nimport {selectCollectionsForPreview} from '../../redux/shop/shop.selectors';\nimport {CollectionsOverviewContainer} from './collections-overview.styles';\nimport ErrorBoundary from \"../error-boundary/error-boundary.component\";\n\nconst CollectionsOverview = ({collections}) => (\n    <ErrorBoundary>\n        <CollectionsOverviewContainer>\n            {collections.map(({id, ...otherCollectionProps}) => (\n                <CollectionPreview key={id} {...otherCollectionProps} />\n            ))}\n        </CollectionsOverviewContainer>\n    </ErrorBoundary>\n\n);\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;"],"sourceRoot":""}